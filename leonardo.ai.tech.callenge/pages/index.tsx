import Head from "next/head";
import { Inter } from "next/font/google";
import createApolloClient from "@/util/apollo-client";
import { gql } from "@apollo/client";
import { useContext, useEffect, useState } from "react";
import { useRouter } from "next/router";
import { getSession } from "next-auth/react";
import { UserContext } from "@/context/UserContext";
import { UserContextType } from "@/types/next-auth";

const inter = Inter({ subsets: ["latin"] });

type PropType = { countries: Array<any> };

export default function Home({ countries }: PropType) {
  const [isLoading, setIsLoading] = useState(true);
  const router = useRouter();

  const { setUser } = useContext<UserContextType>(UserContext);

  useEffect(() => {
    getSession().then((session) => {
      console.log("session", session);
      if (!session) {
        router.replace("/login");
      } else {
        setIsLoading(false);
        // setUser(session as unknown as User);
      }
    });
  }, [router, setUser]);

  if (isLoading) {
    return <p>Loading...</p>;
  }

  return (
    <>
      <Head>
        <title>Leonardo.AI Challenge</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>Home</div>
    </>
  );
}

// export async function getStaticProps() {
//   const client = createApolloClient();

//   const { data } = await client.query({
//     query: gql`
//       query Countries {
//         countries(filter: { currency: { eq: "USD" } }) {
//           code
//           name
//           capital
//           languages {
//             name
//           }
//         }
//       }
//     `,
//   });

//   return {
//     props: {
//       countries: data.countries,
//     },
//   };
// }
